import { Component } from '@angular/core'
import { FormSuppliersComponent } from './form/form.component'
import { BaseCrud, baseFilterI } from '../../base/baseCrud'
import { BaseForm } from '../../base/baseForm'
import { ComponentType } from '@angular/cdk/overlay'
import { URL_API } from '../../../../config/config'

// Generated by https://quicktype.io

export interface Product {
  productoId: number
  nombre: string
  descripcion: string
  activo: boolean
  uMedida: null
  categoria: null
}

@Component({
  selector: 'app-suppliers',
  templateUrl: './suppliers.component.html',
  styleUrls: ['./suppliers.component.scss']
})
export class SuppliersComponent extends BaseCrud {
  override path: string = 'supplier'
  override idField: string = 'proveedorId'

  override formDialogComponent: ComponentType<BaseForm> = FormSuppliersComponent

  override filters: baseFilterI[] = [
    {
      type: 'input',
      placeholder: 'Buscar por palabra clave, id',
      value: '',
      field: 's',
      valueKey: '' // se debe setear aunque no haga nada en el caso del input
    }
  ]

  override getOptionsLists (): void {
    this.http.get<any[]>(`${URL_API}product?pageSize=100`).subscribe(
      {
        next: (data: any) => {
          this.optionsList.products = data.response.datos.map((x: Product) => ({ label: x.nombre, value: x.productoId }))
          // this.filters[1].options = this.optionsList.products
        },
        error: (e) => {
          this.errorAlert = true
          this.errorText = e.message
          // TODO: Pendiente implementar alertas de error en este paso
        },
        complete: () => {
          this.load = false
        }
      }
    )
  }

  deleteHandler (item: any): void {
    this.delete('Eliminar proveedor', `Estas seguro de eliminar el proveedor "${item.nombre}"`, item)
  }
}
